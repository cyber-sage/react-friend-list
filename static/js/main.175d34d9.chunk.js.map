{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Friend","props","friend","remove","activate","deactivate","active","className","name","onClick","App","state","friends","fav","input","handleRemoveFriend","bind","handleAddFriend","updateInput","clearAllFriends","deactivateFriend","activateFriend","this","setState","currentState","concat","filter","friendToDeactivate","updatedFriends","map","friendToActivate","e","value","target","type","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.175d34d9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './friend.css';\nfunction Friend (props) {\n      const { friend, remove, deactivate, activate } = props\n      return (\n        <div>\n          \n          {friend.active ? (\n            \n            <div className=\"Friend-div\">\n              <div>\n              {friend.name}\n              </div>\n              <div className=\"Friend-div-Action\">\n              <button onClick={() => remove(friend.name)}>Remove</button> \n              {/* <IconButton>\n                <FavoriteBorderIcon></FavoriteBorderIcon>\n                </IconButton>  */}\n              {/* <button onClick={() => deactivate(friend.name)}>Deactivate</button> */}\n              </div>\n             </div>\n            \n               )   : (\n            <span>\n              {friend.name}\n              <button onClick={() => activate(friend.name)}>Activate</button>\n            </span>\n          )}\n          \n        </div>\n      )\n    }\n\n    class App extends React.Component {\n      constructor(props) {\n        super(props)\n        this.state = {\n          friends: [\n            { name: 'Juan', active: true ,fav: false},\n            { name: 'Tyler', active: true ,fav:true},\n            { name: 'Michael', active: false , fav:false},\n            { name: 'Charles', active: true ,fav:false}\n          ],\n          input: ''\n        }\n        \n        // Bind here, it's more performant\n        this.handleRemoveFriend = this.handleRemoveFriend.bind(this)\n        this.handleAddFriend = this.handleAddFriend.bind(this)\n        this.updateInput = this.updateInput.bind(this)\n        this.clearAllFriends = this.clearAllFriends.bind(this)\n        this.deactivateFriend = this.deactivateFriend.bind(this)\n        this.activateFriend = this.activateFriend.bind(this)\n      }\n\n      handleAddFriend () {\n        this.setState((currentState) => {\n          return {\n            friends: currentState.friends.concat({name: currentState.input, active: true,fav:false }),\n            input: ''\n          }\n        })\n      }\n\n      handleRemoveFriend (name) {\n        // Remove the friend\n        this.setState((currentState) => {\n          \n          // This object will be returned and merged..\n          return {\n            friends: currentState.friends.filter((friend) => friend.name !== name)\n          }\n        })\n      }\n\n      deactivateFriend (name) {\n        let friendToDeactivate = {\n          name: name,\n          active: false\n        }\n\n        let updatedFriends = this.state.friends.map((friend) => {\n          if (friend.name === name) {\n            return friendToDeactivate\n          }\n          return friend\n        })\n\n        this.setState({\n          friends: updatedFriends\n        })\n      }\n\n      activateFriend (name) {\n        let friendToActivate = {\n          name: name,\n          active: true\n        }\n\n        let updatedFriends = this.state.friends.map((friend) => {\n          if (friend.name === name) {\n            return friendToActivate\n          }\n          return friend\n        })\n\n        this.setState({\n          friends: updatedFriends\n        })\n\n\n      }\n\n      clearAllFriends() {\n        this.setState({\n          friends: [],\n        })\n      }\n\n      updateInput (e) {\n        const value = e.target.value\n        this.setState({\n          input: value\n        })\n      }\n      \n      render () {\n        const { friends } = this.state\n \n        return (\n          <div className=\"Card\">\n            <div className=\"Card-data\">\n              <div className=\"head\"><b>Friends List</b></div>\n              <div className=\"Button\">\n              <input \n              type=\"text\"\n              placeholder=\"New Friend..\"\n              value={this.state.input}\n              onChange={this.updateInput}\n            />\n            <button onClick={this.handleAddFriend}>\n              Submit\n            </button>\n              </div>\n            \n            {/* <div>\n              <button onClick={this.clearAllFriends}>\n                Clear All\n              </button>\n            </div> */}\n\n            {/* <h2>Active Friends</h2> */}\n            {/* <ul> */}\n             \n                {friends.map(friend => friend.active && \n                <Friend key={friend.name} friend={friend} remove={this.handleRemoveFriend} deactivate={this.deactivateFriend} />)\n                \n                }\n              \n            {/* </ul> */}\n            {/* <h2>Inactive</h2> */}\n            {/* <ul>\n              {friends.map(friend => friend.active == false && <Friend key={friend.name} friend={friend} activate={this.activateFriend} />)}\n            </ul> */}\n            </div>\n          </div>\n        )\n      }\n    }\n\n    // ReactDOM.render(\n    //   <App />,\n    //   document.getElementById('app')\n    // )\n    export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}